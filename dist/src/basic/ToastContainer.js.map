{"version":3,"sources":["../../../src/basic/ToastContainer.js"],"names":["POSITION","ABSOLUTE","BOTTOM","TOP","ToastContainer","config","toastInstance","_root","showToast","getModalState","closeToast","props","closeModal","setState","modalVisible","onClose","state","reason","fadeAnim","Animated","Value","pan","ValueXY","x","y","keyboardHeight","isKeyboardVisible","keyboardDidHide","bind","keyboardDidShow","_panResponder","PanResponder","create","onMoveShouldSetPanResponderCapture","onPanResponderRelease","evt","dx","timing","toValue","duration","useNativeDriver","start","kbDidShow","Keyboard","addListener","kbDidHide","remove","position","opacity","width","elevation","paddingHorizontal","Platform","OS","PLATFORM","IOS","top","undefined","bottom","getTop","buttonText","trim","length","e","endCoordinates","height","text","getButtonText","type","supportedOrientations","style","buttonTextStyle","buttonStyle","textStyle","swipeDisabled","closeTimeout","clearTimeout","setTimeout","setValue","panHandlers","getToastStyle","transform","translateX","translateY","Component","propTypes","ViewPropTypes","StyledToastContainer","mapPropsToStyleNames"],"mappings":"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","file":"ToastContainer.js","sourcesContent":["/* eslint-disable class-methods-use-this */\r\nimport React, { Component } from 'react';\r\nimport { Keyboard, Platform, Animated, PanResponder } from 'react-native';\r\nimport { ViewPropTypes } from 'deprecated-react-native-prop-types';\r\nimport { connectStyle } from 'native-base-shoutem-theme';\r\n\r\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\r\nimport { PLATFORM } from '../theme/variables/commonColor';\r\n\r\nimport { Text } from './Text';\r\nimport { Button } from './Button';\r\nimport { Toast } from './Toast';\r\n\r\nconst POSITION = {\r\n  ABSOLUTE: 'absolute',\r\n  BOTTOM: 'bottom',\r\n  TOP: 'top'\r\n};\r\n\r\nclass ToastContainer extends Component {\r\n  static show({ ...config }) {\r\n    this.toastInstance._root.showToast({ config });\r\n  }\r\n  static hide() {\r\n    if (this.toastInstance._root.getModalState()) {\r\n      this.toastInstance._root.closeToast('functionCall');\r\n    }\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      fadeAnim: new Animated.Value(0),\r\n      pan: new Animated.ValueXY({ x: 0, y: 0 }),\r\n      keyboardHeight: 0,\r\n      isKeyboardVisible: false,\r\n      modalVisible: false\r\n    };\r\n\r\n    this.keyboardDidHide = this.keyboardDidHide.bind(this);\r\n    this.keyboardDidShow = this.keyboardDidShow.bind(this);\r\n    this._panResponder = PanResponder.create({\r\n      onMoveShouldSetPanResponderCapture: () => true,\r\n      onPanResponderRelease: (evt, { dx }) => {\r\n        if (dx !== 0) {\r\n          Animated.timing(this.state.pan, {\r\n            toValue: { x: dx, y: 0 },\r\n            duration: 100,\r\n            useNativeDriver: false\r\n          }).start(() => this.closeToast('swipe'));\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.kbDidShow = Keyboard.addListener('keyboardDidShow', this.keyboardDidShow);\r\n    this.kbDidHide = Keyboard.addListener('keyboardDidHide', this.keyboardDidHide);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.kbDidShow.remove();\r\n    this.kbDidHide.remove();\r\n  }\r\n\r\n  getToastStyle() {\r\n    return {\r\n      position: POSITION.ABSOLUTE,\r\n      opacity: this.state.fadeAnim,\r\n      width: '100%',\r\n      elevation: 9,\r\n      paddingHorizontal: Platform.OS === PLATFORM.IOS ? 20 : 0,\r\n      top: this.state.position === POSITION.TOP ? 30 : undefined,\r\n      bottom:\r\n        this.state.position === POSITION.BOTTOM ? this.getTop() : undefined\r\n    };\r\n  }\r\n\r\n  getTop() {\r\n    if (Platform.OS === PLATFORM.IOS) {\r\n      if (this.state.isKeyboardVisible) {\r\n        return this.state.keyboardHeight;\r\n      }\r\n      return 30;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  getButtonText(buttonText) {\r\n    if (buttonText) {\r\n      if (buttonText.trim().length === 0) {\r\n        return undefined;\r\n      }\r\n      return buttonText;\r\n    }\r\n    return undefined;\r\n  }\r\n  getModalState() {\r\n    return this.state.modalVisible;\r\n  }\r\n\r\n  static toastInstance;\r\n\r\n  keyboardDidHide() {\r\n    this.setState({\r\n      keyboardHeight: 0,\r\n      isKeyboardVisible: false\r\n    });\r\n  }\r\n\r\n  keyboardDidShow(e) {\r\n    this.setState({\r\n      keyboardHeight: e.endCoordinates.height,\r\n      isKeyboardVisible: true\r\n    });\r\n  }\r\n\r\n  showToast({ config }) {\r\n    this.setState({\r\n      modalVisible: true,\r\n      text: config.text,\r\n      buttonText: this.getButtonText(config.buttonText),\r\n      type: config.type,\r\n      position: config.position ? config.position : POSITION.BOTTOM,\r\n      supportedOrientations: config.supportedOrientations,\r\n      style: config.style,\r\n      buttonTextStyle: config.buttonTextStyle,\r\n      buttonStyle: config.buttonStyle,\r\n      textStyle: config.textStyle,\r\n      onClose: config.onClose,\r\n      swipeDisabled: config.swipeDisabled || false\r\n    });\r\n    // If we have a toast already open, cut off its close timeout so that it won't affect *this* toast.\r\n    if (this.closeTimeout) {\r\n      clearTimeout(this.closeTimeout);\r\n    }\r\n    // Set the toast to close after the duration.\r\n    if (config.duration !== 0) {\r\n      const duration = config.duration > 0 ? config.duration : 1500;\r\n      this.closeTimeout = setTimeout(\r\n        this.closeToast.bind(this, 'timeout'),\r\n        duration\r\n      );\r\n    }\r\n    // Fade the toast in now.\r\n    Animated.timing(this.state.fadeAnim, {\r\n      toValue: 1,\r\n      duration: 200,\r\n      useNativeDriver: false\r\n    }).start();\r\n  }\r\n  closeModal = reason => {\r\n    this.setState({\r\n      modalVisible: false\r\n    });\r\n    const { onClose } = this.state;\r\n    if (onClose && typeof onClose === 'function') {\r\n      onClose(reason);\r\n    }\r\n  };\r\n  closeToast(reason) {\r\n    clearTimeout(this.closeTimeout);\r\n    Animated.timing(this.state.fadeAnim, {\r\n      toValue: 0,\r\n      duration: 200,\r\n      useNativeDriver: false\r\n    }).start(() => {\r\n      this.closeModal(reason);\r\n      this.state.pan.setValue({ x: 0, y: 0 });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.modalVisible) {\r\n      const { x, y } = this.state.pan;\r\n      return (\r\n        <Animated.View\r\n          {...(this.state.swipeDisabled ? {} : this._panResponder.panHandlers)}\r\n          style={[\r\n            this.getToastStyle(),\r\n            { transform: [{ translateX: x }, { translateY: y }] }\r\n          ]}\r\n        >\r\n          <Toast\r\n            style={[this.state.style]}\r\n            danger={this.state.type === 'danger'}\r\n            success={this.state.type === 'success'}\r\n            warning={this.state.type === 'warning'}\r\n          >\r\n            <Text style={this.state.textStyle}>{this.state.text}</Text>\r\n            {this.state.buttonText && (\r\n              <Button\r\n                style={this.state.buttonStyle}\r\n                onPress={() => this.closeToast('user')}\r\n              >\r\n                <Text style={this.state.buttonTextStyle}>\r\n                  {this.state.buttonText}\r\n                </Text>\r\n              </Button>\r\n            )}\r\n          </Toast>\r\n        </Animated.View>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nToastContainer.propTypes = {\r\n  ...ViewPropTypes\r\n};\r\n\r\nconst StyledToastContainer = connectStyle(\r\n  'NativeBase.ToastContainer',\r\n  {},\r\n  mapPropsToStyleNames\r\n)(ToastContainer);\r\n\r\nexport { StyledToastContainer as ToastContainer };\r\n"]}